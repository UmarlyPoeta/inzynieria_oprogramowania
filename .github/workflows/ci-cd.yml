name: NetSimCPP CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: NetSimCPP1234
          MYSQL_DATABASE: netsim
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -pNetSimCPP1234"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          g++ \
          libcpprest-dev \
          nlohmann-json3-dev \
          libssl-dev \
          libgtest-dev \
          libmysqlcppconn-dev \
          mysql-client
    
    - name: Setup database schema
      run: |
        mysql -h 127.0.0.1 -u root -pNetSimCPP1234 netsim < project/database/NetSimDB.sql
        echo "Database schema loaded successfully"
    
    - name: Verify database
      run: |
        mysql -h 127.0.0.1 -u root -pNetSimCPP1234 netsim -e "SHOW TABLES;"
    
    - name: Configure CMake
      working-directory: project/backend
      run: cmake .
    
    - name: Build project
      working-directory: project/backend
      run: make -j$(nproc)
    
    - name: Run unit tests
      working-directory: project/backend
      run: ./netsim_tests --gtest_output=xml:test-results.xml
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: root
        DB_PASS: NetSimCPP1234
        DB_NAME: netsim
    
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      continue-on-error: true
      with:
        files: project/backend/test-results.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: project/backend/test-results.xml

  performance-tests:
    runs-on: ubuntu-22.04
    needs: build-and-test
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: NetSimCPP1234
          MYSQL_DATABASE: netsim
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -pNetSimCPP1234"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          g++ \
          libcpprest-dev \
          nlohmann-json3-dev \
          libssl-dev \
          libgtest-dev \
          libmysqlcppconn-dev \
          valgrind
    
    - name: Build project
      working-directory: project/backend
      run: |
        cmake .
        make -j$(nproc)
        make netsim_perf_tests
    
    - name: Run performance tests
      working-directory: project/backend
      run: ./netsim_perf_tests
    
    - name: Memory leak check
      working-directory: project/backend
      run: |
        valgrind --leak-check=full --error-exitcode=1 ./netsim_tests --gtest_filter=NetworkTest.AddNode

  docker-build:
    runs-on: ubuntu-22.04
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t netsim:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm netsim:latest ./netsim_tests
    
    - name: Start full stack with Docker Compose
      run: |
        docker-compose up -d
        echo "Waiting for services to be healthy..."
        sleep 30
    
    - name: Check MySQL health
      run: |
        docker-compose exec -T mysql mysqladmin ping -h localhost -pNetSimCPP1234
    
    - name: Test Docker API
      run: |
        echo "Testing server status..."
        curl -f http://localhost:8080/status || exit 1
        
        echo "Testing database status..."
        curl -f http://localhost:8080/db/status || exit 1
        
        echo "Enabling database persistence..."
        curl -X POST http://localhost:8080/db/enable \
          -H "Content-Type: application/json" \
          -d '{"host":"mysql","port":3306,"user":"root","password":"NetSimCPP1234","database":"netsim"}'
        
        echo "Creating test node..."
        curl -X POST http://localhost:8080/node/add \
          -H "Content-Type: application/json" \
          -d '{"name":"TestNode","type":"host","ip":"10.0.0.1"}'
        
        echo "Saving topology to database..."
        curl -f http://localhost:8080/db/save || exit 1
        
        echo "âœ… All Docker tests passed!"
    
    - name: Show container logs
      if: failure()
      run: |
        echo "=== NetSim Server Logs ==="
        docker-compose logs netsim
        echo "=== MySQL Logs ==="
        docker-compose logs mysql
    
    - name: Cleanup
      if: always()
      run: docker-compose down -v

  code-quality:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install cppcheck
      run: sudo apt-get install -y cppcheck
    
    - name: Run cppcheck
      run: |
        cppcheck --enable=warning,performance,portability \
          --suppress=missingIncludeSystem \
          --suppress=unusedFunction \
          --suppress=useStlAlgorithm \
          --suppress=unreadVariable \
          --suppress=knownEmptyContainer \
          --error-exitcode=1 \
          project/backend/src/
