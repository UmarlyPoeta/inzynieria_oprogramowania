version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: netsim-db-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: netsimdb
      MYSQL_USER: ${DB_USER:-netsimuser}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./project/database/NetSimDB.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./project/database/AuthSchema.sql:/docker-entrypoint-initdb.d/02-auth.sql
    networks:
      - netsim-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: netsim-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - netsim-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NetSimCPP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: netsim-app-prod
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: netsimdb
      DB_USER: ${DB_USER:-netsimuser}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_HOURS: ${JWT_EXPIRATION_HOURS:-24}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - netsim-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with SSL
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: netsim-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - netsim-network
    restart: unless-stopped

  # Certbot for SSL renewal
  certbot:
    image: certbot/certbot:latest
    container_name: netsim-certbot
    volumes:
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - netsim-network

networks:
  netsim-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  certbot_data:
  certbot_www:
  nginx_logs:
